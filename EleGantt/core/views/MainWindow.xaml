<Window x:Class="EleGantt.core.views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dd="urn:gong-wpf-dragdrop"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:converters="clr-namespace:EleGantt.core.utils.converters"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="{Binding AppName}" Height="450" Width="800"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:math="http://hexinnovation.com/math"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        WindowStartupLocation="CenterScreen"
        WindowState="Maximized"
        MinHeight="300px"
        MinWidth="500px">
    
    <Window.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverterKey"/>
        <converters:EventLengthConverter x:Key="mEventLengthConverter"/>
        <math:MathConverter x:Key="math" />
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Modifiers="Control" Key="S" Command="{Binding SaveProjectCmd}" />
        <KeyBinding Modifiers="Control" Key="O" Command="{Binding OpenProjectCmd}" />
        <KeyBinding Modifiers="Control" Key="Q" Command="{Binding CloseCmd}" />
    </Window.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30px"/>
            <RowDefinition Height="5*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="250*" MinHeight="100px"/>
                <RowDefinition Height="60px"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" MinWidth="220px"/>
                <ColumnDefinition Width="6*"/>
            </Grid.ColumnDefinitions>

            <!-- DIALOGS-->
            <materialDesign:DialogHost Name="TaskDialog" CloseOnClickAwayParameter="True" CloseOnClickAway="True" Identifier="dialog1" DialogTheme="Inherit" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Grid.RowSpan="3">
                <materialDesign:DialogHost.DialogContentTemplate>
                    <DataTemplate DataType="local:GanttTaskViewModel">
                        <StackPanel Margin="20,20">
                            <TextBox Text="{Binding Name}" Margin="5,10" />

                            <Grid HorizontalAlignment="Stretch"  Margin="5,10" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Bottom">Start</TextBlock>
                                <DatePicker Grid.Column="2" Grid.Row="0" Name="StartDate" SelectedDate="{Binding DateStart}" Focusable="False" DisplayDateEnd="{Binding DateEnd}" DisplayDateStart="{Binding Path=DataContext.Start, ElementName=TaskDialog}"/>
                                <TextBlock Grid.Column="0" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Bottom">End</TextBlock>
                                <DatePicker Grid.Column="2" Grid.Row="1" Name="EndDate" SelectedDate="{Binding DateEnd}" Focusable="False" DisplayDateStart="{Binding DateStart}" DisplayDateEnd="{Binding Path=DataContext.End, ElementName=TaskDialog}"/>
                            </Grid>

                            <TextBlock Margin="5,10" Text="{Binding Length,StringFormat='Task length : \{0\} days'}" />

                            <StackPanel
                                Margin="5,10"
                                Orientation="Horizontal"
                                HorizontalAlignment="Right">
                                <Button
                                    Style="{StaticResource MaterialDesignFlatButton}"
                                    IsDefault="True"
                                    Content="Accept"
                                    Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}">
                                    <Button.CommandParameter>
                                        <sys:Boolean>True</sys:Boolean>
                                    </Button.CommandParameter>
                                </Button>
                            </StackPanel>
                        </StackPanel>
                    </DataTemplate>
                </materialDesign:DialogHost.DialogContentTemplate>
            </materialDesign:DialogHost>

            <StackPanel Grid.Row="0" Margin="10,0,10,0">
                <TextBox TextWrapping="Wrap" Text="{Binding Name, FallbackValue='Project Name'}" VerticalAlignment="Top" Padding="0 2px" Margin="0,5,0,10" FontWeight="Bold" Height="33" />
                <Grid HorizontalAlignment="Stretch" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Bottom">Start</TextBlock>
                    <DatePicker Grid.Column="2" Grid.Row="0" Name="StartDate" DisplayDateEnd="{Binding End}" Focusable="False" SelectedDate="{Binding Start}" SelectedDateChanged="SelectedDateChanged">
                    </DatePicker>
                    <TextBlock Grid.Column="0" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Bottom">End</TextBlock>
                    <DatePicker Grid.Column="2" Grid.Row="1" Name="EndDate" DisplayDateStart="{Binding Start}" Focusable="False"  SelectedDate="{Binding End}" SelectedDateChanged="SelectedDateChanged">
                        <DatePicker.Resources>
                            <Style TargetType="DatePickerTextBox">
                                <Setter Property="IsReadOnly" Value="True"/>
                            </Style>
                        </DatePicker.Resources>
                    </DatePicker>
                </Grid>
            </StackPanel>
            <ListView x:Name="SideListView" Margin="10,10,10,0" Grid.Row="1" ItemsSource="{Binding Tasks}"  
                          dd:DragDrop.IsDragSource="True" 
                          dd:DragDrop.IsDropTarget="True" 
                          SelectedItem="{Binding SelectedTask}" 
                          HorizontalContentAlignment="Stretch" 
                          
                          ScrollViewer.ScrollChanged="ScrollChanged">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <StackPanel>
                            <TextBox x:Name="inputTask" Text="{Binding Name}" Height="Auto" IsVisibleChanged="InputTask_IsVisibleChanged" Visibility="{Binding Path=IsEdition, Converter={StaticResource BooleanToVisibilityConverterKey}}" FontWeight="Bold" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="LostFocus">
                                        <i:InvokeCommandAction Command="{Binding DisableEditionCmd}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Esc" Command="{Binding DisableEditionCmd}"/>
                                    <KeyBinding Key="Enter" Command="{Binding DisableEditionCmd}"/>
                                </TextBox.InputBindings>
                            </TextBox>
                            <TextBlock x:Name="labelTask" Text="{Binding Name}" Height="Auto" Visibility="{Binding Path=IsEdition, Converter={StaticResource BooleanToVisibilityConverterKey}, ConverterParameter=1}" FontWeight="Bold" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                                <TextBlock.InputBindings>
                                    <KeyBinding Key="F2"
                                                Command="{Binding EnableEditionCmd}"/>
                                    <MouseBinding MouseAction="LeftDoubleClick"
                                                  Command="{Binding EnableEditionCmd}"/>
                                </TextBlock.InputBindings>
                            </TextBlock>
                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem" BasedOn="{StaticResource MaterialDesignListBoxItem}">
                        <Setter Property="Height" Value="{Binding Path=DataContext.CellHeight, ElementName=SideListView}" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.InputBindings>
                    <KeyBinding Key="Delete" 
                                    CommandParameter="{Binding ElementName=SideListView, Path=SelectedItems}"
                                    Command="{Binding RemoveSelectedTasksCmd}" />
                    <KeyBinding Key="F2"
                                    CommandParameter="{Binding ElementName=SideListView, Path=SelectedItems}"
                                    Command="{Binding EditSelectedTasksCmd}" />
                </ListView.InputBindings>
            </ListView>

            <ScrollViewer Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Disabled">
             
                <Grid VerticalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="80px"/>
                        <RowDefinition Height="250*"/>
                    </Grid.RowDefinitions>
                    <Grid Name="Timeline" HorizontalAlignment="Stretch" Grid.Row="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40px"/>
                            <RowDefinition Height="40px"/>
                        </Grid.RowDefinitions>
                    </Grid>
                    <ScrollViewer Name="TimelineScrollView" Margin="0,27,0,0" VerticalScrollBarVisibility="Visible" ScrollChanged="ScrollChanged" Grid.Row="1">
                        <ItemsControl ItemsSource="{Binding Tasks}" >
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel>

                                    </StackPanel>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel HorizontalAlignment="Left" VerticalAlignment="Stretch"  Height="{Binding Path=DataContext.CellHeight, ElementName=Timeline,  Converter={StaticResource math}, ConverterParameter=x}">
                                        <materialDesign:Card Height="{Binding Path=DataContext.CellHeight, ElementName=Timeline, Converter={StaticResource math}, ConverterParameter=x-3}"
                                               
                                                   Background="{DynamicResource PrimaryHueDarkBrush}"
                                                   HorizontalAlignment="Left"
                                                   Margin="0,1">

                                            <Label Content="{Binding Name}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                            <materialDesign:Card.Width>
                                                <MultiBinding Converter="{StaticResource math}" ConverterParameter="(x+1)*y">
                                                    <Binding Path="Length" />
                                                    <Binding ElementName="Timeline" Path="DataContext.CellWidth"/>
                                                </MultiBinding>
                                            </materialDesign:Card.Width>
                                            <materialDesign:Card.InputBindings>
                                                <MouseBinding MouseAction="LeftDoubleClick" 
                                            Command="{Binding ShowTaskDialog}"/>
                                            </materialDesign:Card.InputBindings>
                                        </materialDesign:Card>

                                        <StackPanel.Margin>
                                            <MultiBinding Converter="{StaticResource mEventLengthConverter}">
                                                <Binding ElementName="Timeline" Path="DataContext.Start"/>
                                                <Binding Path="DateStart"/>
                                                <Binding ElementName="Timeline" Path="DataContext.CellWidth"/>
                                            </MultiBinding>
                                        </StackPanel.Margin>
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Grid>
            </ScrollViewer>


            <Button x:Name="btnDelete" HorizontalAlignment="Left" Margin="10,10,0,15" Grid.Row="2" Width="75" 
                    Style="{StaticResource MaterialDesignOutlinedButton}" 
                    CommandParameter="{Binding ElementName=SideListView, Path=SelectedItems}"
                    Command="{Binding RemoveSelectedTasksCmd}">
                <materialDesign:PackIcon Kind="Delete" Width="15" Height="15"/>
            </Button>
            <Button x:Name="btnAdd" Margin="0,10,10,15" Grid.Row="2" Width="75" HorizontalAlignment="Right" Command="{Binding AddTaskCmd}">
                <materialDesign:PackIcon Kind="Add" Width="15" Height="15"  />
            </Button>
        </Grid>

        <Grid Grid.Column="0">
            <DockPanel>
                <Menu DockPanel.Dock="Top">
                    <MenuItem Header="_File" FontSize="15" Height="30">
                        <MenuItem Header="_New" Command="{Binding CreateNewProjectCmd}" />
                        <MenuItem Header="_Open" Command="{Binding OpenProjectCmd}"/>
                        <MenuItem Header="_Save" Command="{Binding SaveProjectCmd}"/>
                        <MenuItem Header="_Save under..." CommandParameter="u" Command="{Binding SaveProjectCmd}"/>
                        <MenuItem Header="_Preferences">
                            <MenuItem Header="_Dark Theme" IsCheckable="True" IsChecked="{Binding IsDark}" Click="MenuItem_Click" />
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="_Exit" Command="{Binding CloseCmd}"/>
                    </MenuItem>
                </Menu>
                <TextBox AcceptsReturn="True" />
            </DockPanel>
        </Grid>

    </Grid>

</Window>
